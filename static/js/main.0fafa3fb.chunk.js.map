{"version":3,"sources":["components/Modal.js","App.js","index.js"],"names":["Modal","_ref","activeModal","currentTitle","currentCaption","actionFlag","onCloseModal","onAction","currentButtonText","react_default","a","createElement","vkui","id","onClose","title","caption","actions","type","action","GROUP_ID","group_id","COMMUNITY_ACCESS_TOKEN","access_token","APP_ACCESS_TOKEN","VERSION","v","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startScanFlow","openQRScanner","handleQRResult","QRResult","arguments","length","undefined","setState","state","isMember","sendQRResult","connect","send","method","request_id","params","objectSpread","user_id","fetchedUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","qr","user","isMessagesAllowed","QRSuccessModal","t0","console","log","stop","setAreaVal","data","areaVal","JSON","stringify","activateModal","closeModal","joinToGroup","setTimeout","handleModalAction","flag","joinGroup","qrSuccess","activateJoinGroupModal","activePanel","_this2","subscribe","_ref2","detail","result","qr_reult","response","is_allowed","before","photo_200","src","description","city","concat","first_name","last_name","onClick","size","level","components_Modal","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0fafa3fb.chunk.js","sourcesContent":["import React from 'react';\n\nimport {ModalRoot, ModalCard} from '@vkontakte/vkui';\n\nconst Modal = ({activeModal, currentTitle, currentCaption, actionFlag, onCloseModal, onAction, currentButtonText}) => (\n    <ModalRoot activeModal={activeModal}>\n        <ModalCard\n            id={'MY_MODAL'}\n            onClose={() => onCloseModal()}\n            title={currentTitle}\n            caption={currentCaption}\n            actions={[{\n                title: currentButtonText,\n                type: 'primary',\n                action: () => onAction(actionFlag)\n            }]}\n        >\n        </ModalCard>\n    </ModalRoot>\n);\n\nexport default Modal;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {Button, Avatar, Group, ListItem, Panel, PanelHeader, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from 'axios'\n\nimport Modal from \"./components/Modal\";\n\nconst GROUP_ID = {group_id: 185199781}\nconst COMMUNITY_ACCESS_TOKEN = {access_token: '9b1957fb4a56d227f2d894046db9b8aa12b7dafbbf6f606c0f7af580dcc06cf12862881c158bc4cf82e09'}\nconst APP_ACCESS_TOKEN = {access_token: '59f1b2e059f1b2e059f1b2e0c5599da582559f159f1b2e004b9e79590e7db44bab8b30c'}\nconst VERSION = {\"v\": \"5.101\"}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            isMember: false,\n            isMessagesAllowed: false,\n            fetchedUser: null,\n            activeModal: null,\n            QRResult: null,\n            currentTitle: '',\n            currentCaption: '',\n            actionFlag: '',\n            areaVal: '',\n\n        };\n    }\n\n    startScanFlow = () => {\n        this.openQRScanner()\n    }\n\n    handleQRResult = (QRResult = '1111111') => {\n        this.setState({QRResult})\n\n        if (this.state.isMember) {\n            this.sendQRResult(this.state.QRResult)\n        } else {\n            connect.send('VKWebAppCallAPIMethod', {\n                method: \"groups.isMember\",\n                request_id: \"groups.isMember\",\n                params: {\n                    'user_id': this.state.fetchedUser.id,\n                    ...GROUP_ID,\n                    ...APP_ACCESS_TOKEN,\n                    ...VERSION\n                }\n            });\n        }\n    }\n\n    sendQRResult = async () => {\n        try {\n            await axios.get('https://reqres.in/api/users', {\n                qr: this.state.QRResult,\n                user: this.state.fetchedUser\n            })\n            if(this.state.isMessagesAllowed){\n                this.QRSuccessModal()\n            }else{\n                connect.send('VKWebAppCallAPIMethod', {\n                    method: \"messages.isMessagesFromGroupAllowed\",\n                    request_id: \"messages.isMessagesFromGroupAllowed\",\n                    params: {\n                        request_id: \"messages.isMessagesFromGroupAllowed\",\n                        user_id: this.state.fetchedUser.id,\n                        ...COMMUNITY_ACCESS_TOKEN,\n                        ...VERSION,\n                        ...GROUP_ID\n                    }\n                });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    setAreaVal = (data) => {\n        this.setState({areaVal: this.state.areaVal + ' ' + JSON.stringify(data)});\n    };\n\n\n    activateModal = () => {\n        this.setState({activeModal: 'MY_MODAL'});\n    };\n\n    closeModal = () => {\n        this.setState({activeModal: null});\n    };\n\n    joinToGroup = () => {\n        connect.send(\"VKWebAppJoinGroup\", GROUP_ID);\n    };\n\n    openQRScanner = () => {\n        setTimeout(function () {\n            connect.send(\"VKWebAppOpenQR\");\n        }, 300)\n\n    }\n\n    handleModalAction = (flag) => {\n        this.closeModal()\n        const flagMap = {\n            joinGroup: () => this.joinToGroup(),\n            qrSuccess: () => this.openQRScanner()\n        }\n        flagMap[flag]()\n    }\n\n    activateJoinGroupModal = () => {\n        this.setState({\n            currentTitle: 'Вступление в группу',\n            currentCaption: 'Для начисления балов подпишитесь на группу и рассылку',\n            currentButtonText: 'Вступить',\n            actionFlag: 'joinGroup'\n        })\n        this.activateModal()\n    }\n\n    QRSuccessModal = () => {\n        this.setState({\n            currentTitle: 'Чек успешно отправлен',\n            currentCaption: 'В ближайшее время мы выполним проверку и начислим балы',\n            currentButtonText: 'Сканировать еще',\n            actionFlag: 'qrSuccess'\n        })\n        this.activateModal()\n    }\n\n    componentDidMount() {\n        connect.subscribe(({detail}) => {\n            this.setAreaVal(detail)\n            switch (detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({fetchedUser: detail.data});\n                    break;\n                case 'VKWebAppAllowMessagesFromGroupResult':\n                    if (detail.data.request_id === 'messages.isMessagesFromGroupAllowed' && detail.data.result) {\n                        this.setState({isMessagesAllowed: true})\n                        this.QRSuccessModal()\n                    }\n                    break;\n                case 'VKWebAppJoinGroupResult':\n                    if (detail.data.result) {\n                        console.log('VKWebAppJoinGroupResult')\n                        this.sendQRResult()\n                    }\n                    break;\n                case 'VKWebAppOpenQRResult':\n                    this.handleQRResult(detail.data.qr_reult)\n                    break;\n\n                // METHODS\n                case 'VKWebAppCallAPIMethodResult':\n                    if (detail.data.request_id === 'groups.isMember' && detail.data.response === 0) {\n                        this.activateJoinGroupModal()\n                    }\n                    if (detail.data.request_id === 'groups.isMember' && detail.data.response === 1) {\n                        this.setState({isMember: true})\n                        this.sendQRResult()\n                    }\n\n                    if (detail.data.request_id === 'messages.isMessagesFromGroupAllowed' && detail.data.response.is_allowed === 1) {\n                        this.setState({isMessagesAllowed: true})\n                        this.QRSuccessModal()\n                    }\n                    if (detail.data.request_id === 'messages.isMessagesFromGroupAllowed' && detail.data.response.is_allowed === 0) {\n                        connect.send(\"VKWebAppAllowMessagesFromGroup\", {\n                            request_id: \"messages.isMessagesFromGroupAllowed\", ...GROUP_ID\n                        });\n                    }\n                    break;\n                default:\n                    console.log('default');\n            }\n        });\n        connect.send('VKWebAppGetUserInfo', {});\n    }\n\n    render() {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Panel id={'home'}>\n                    <PanelHeader>Scanner</PanelHeader>\n\n                    {this.state.fetchedUser &&\n                    <Group title=\"Welcome\">\n                        <ListItem\n                            before={\n                                this.state.fetchedUser.photo_200\n                                    ? <Avatar src={this.state.fetchedUser.photo_200}/>\n                                    : null}\n                            description={\n                                this.state.fetchedUser.city && this.state.fetchedUser.city.title\n                                    ? this.state.fetchedUser.city.title\n                                    : ''\n                            }\n                        >\n                            {`${this.state.fetchedUser.first_name} ${this.state.fetchedUser.last_name}`}\n                        </ListItem>\n                    </Group>}\n\n                    <Button\n                        onClick={this.startScanFlow}\n                        size=\"xl\"\n                        level=\"primary\"\n                    >\n                        Зарегистрировать чек\n                    </Button>\n\n                    <Modal\n                        activeModal={this.state.activeModal}\n                        currentTitle={this.state.currentTitle}\n                        currentCaption={this.state.currentCaption}\n                        actionFlag={this.state.actionFlag}\n                        currentButtonText={this.state.currentButtonText}\n                        onCloseModal={this.closeModal}\n                        onAction={this.handleModalAction}\n                    />\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\nconsole.log('kek', connect.send(\"VKWebAppGetUserInfo\", {}))\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}