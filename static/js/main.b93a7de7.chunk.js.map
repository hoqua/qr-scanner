{"version":3,"sources":["components/Modal.js","App.js","index.js"],"names":["Modal","_ref","activeModal","currentTitle","currentCaption","actionFlag","onCloseModal","onAction","currentButtonText","react_default","a","createElement","vkui","id","onClose","title","caption","actions","type","action","GROUP_ID","group_id","COMUNITY_ACCESS_TOKEN","access_token","APP_ACCESS_TOKEN","VERSION","v","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleQRResult","asyncToGenerator","regenerator_default","mark","_callee","qr","wrap","_context","prev","next","axios","get","user","state","fetchedUser","connect","send","method","params","objectSpread","request_id","user_id","t0","console","log","stop","_x","apply","arguments","activateModal","setState","closeModal","joinToGroup","openQRScanner","handleModalAction","flag","joinGroup","qrSuccess","activateJoinGroupModal","QRSuccessModal","activePanel","_this2","setTimeout","subscribe","_ref2","detail","data","result","qr_reult","response","is_allowed","key","before","photo_200","src","description","city","concat","first_name","last_name","components_Modal","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b93a7de7.chunk.js","sourcesContent":["import React from 'react';\n\nimport {ModalRoot, ModalCard} from '@vkontakte/vkui';\n\nconst Modal = ({activeModal, currentTitle, currentCaption, actionFlag, onCloseModal, onAction, currentButtonText}) => (\n    <ModalRoot activeModal={activeModal}>\n        <ModalCard\n            id={'MY_MODAL'}\n            onClose={() => onCloseModal()}\n            title={currentTitle}\n            caption={currentCaption}\n            actions={[{\n                title: currentButtonText,\n                type: 'primary',\n                action: () => onAction(actionFlag)\n            }]}\n        >\n        </ModalCard>\n    </ModalRoot>\n);\n\nexport default Modal;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {Avatar, Group, ListItem, Panel, PanelHeader, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from 'axios'\n\nimport Modal from \"./components/Modal\";\n\nconst GROUP_ID = {group_id: 185199781}\nconst COMUNITY_ACCESS_TOKEN = {access_token: '9b1957fb4a56d227f2d894046db9b8aa12b7dafbbf6f606c0f7af580dcc06cf12862881c158bc4cf82e09'}\nconst APP_ACCESS_TOKEN = {access_token: '59f1b2e059f1b2e059f1b2e0c5599da582559f159f1b2e004b9e79590e7db44bab8b30c'}\nconst VERSION = {\"v\": \"5.101\"}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            activeModal: null,\n            currentTitle: '',\n            currentCaption: '',\n            actionFlag: ''\n\n        };\n    }\n\n    handleQRResult = async (qr) => {\n        try {\n            await axios.get('https://reqres.in/api/users', {\n                qr,\n                user: this.state.fetchedUser\n            })\n            connect.send('VKWebAppCallAPIMethod', {\n                \"method\": \"messages.isMessagesFromGroupAllowed\",\n                \"params\": {\n                    \"request_id\": \"groups.isMessagesFromGroupAllowed\",\n                    'user_id': this.state.fetchedUser.id,\n                    ...COMUNITY_ACCESS_TOKEN,\n                    ...VERSION,\n                    ...GROUP_ID\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    activateModal = () => {\n        this.setState({activeModal: 'MY_MODAL'});\n    };\n\n    closeModal = () => {\n        this.setState({activeModal: null});\n    };\n\n    joinToGroup = () => {\n        connect.send(\"VKWebAppJoinGroup\", GROUP_ID);\n    };\n\n    openQRScanner = () => {\n        connect.send(\"VKWebAppOpenQR\");\n    }\n\n    handleModalAction = (flag) => {\n        const flagMap = {\n            joinGroup: () => this.joinToGroup(),\n            qrSuccess: () => this.openQRScanner(),\n        }\n        flagMap[flag]()\n        this.closeModal()\n    }\n\n    activateJoinGroupModal = () => {\n        this.setState({\n            currentTitle: 'Вступление в группу',\n            currentCaption: 'Необходимо вструпить в группу',\n            currentButtonText: 'Вступить',\n            actionFlag: 'joinGroup'\n        })\n        this.activateModal()\n    }\n\n    QRSuccessModal = () => {\n        this.setState({\n            currentTitle: 'Чек успешно отправлен',\n            currentCaption: 'В ближайшее время мы выполним проверку и начислим балы',\n            currentButtonText: 'Сканировать еще',\n            actionFlag: 'qrSuccess'\n        })\n        this.activateModal()\n    }\n\n    componentDidMount() {\n\n        const a = () => {\n            this.openQRScanner()\n        }\n        setTimeout(a, 2000)\n        connect.subscribe(({detail}) => {\n            console.log(detail);\n            switch (detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({fetchedUser: detail.data});\n                    connect.send('VKWebAppCallAPIMethod', {\n                        \"method\": \"groups.isMember\",\n                        \"params\": {\n                            \"request_id\": \"groups.isMember\",\n                            'user_id': detail.data.id,\n                            ...GROUP_ID,\n                            ...APP_ACCESS_TOKEN,\n                            ...VERSION\n                        }\n                    });\n                    break;\n                case 'VKWebAppAllowMessagesFromGroupResult':\n                    if (detail.data.request_id === 'messages.isMessagesFromGroupAllowed' && detail.data.result) {\n                        this.QRSuccessModal()\n                    }\n                    break;\n                case 'VKWebAppJoinGroupResult':\n                    if (detail.data.result) {\n                        this.openQRScanner()\n                    }\n                    break;\n                case 'VKWebAppOpenQRResult':\n                    this.handleQRResult(detail.data.qr_reult)\n                    break;\n\n                // METHODS\n                case 'VKWebAppCallAPIMethodResult':\n                    if (detail.data.request_id === 'groups.isMember' && detail.data.response === 0) {\n                        this.activateJoinGroupModal()\n                    }\n                    if (detail.data.request_id === 'groups.isMember' && detail.data.response === 1) {\n                        this.openQRScanner()\n                    }\n\n                    if (detail.data.request_id === 'groups.isMessagesFromGroupAllowed' && detail.data.response.is_allowed === 1) {\n                        this.QRSuccessModal()\n                    }\n                    if (detail.data.request_id === 'groups.isMessagesFromGroupAllowed' && detail.data.response.is_allowed === 0) {\n                        connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"key\": \"dBuBKe1kFcdemzB\", ...GROUP_ID});\n                    }\n                    break;\n                default:\n                    console.log('default');\n            }\n        });\n        connect.send('VKWebAppGetUserInfo', {});\n    }\n\n    render() {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Panel id={'home'}>\n                    {this.state.fetchedUser &&\n                    <Group title=\"Welcome\">\n                        <ListItem\n                            before={\n                                this.state.fetchedUser.photo_200\n                                    ? <Avatar src={this.state.fetchedUser.photo_200}/>\n                                    : null}\n                            description={\n                                this.state.fetchedUser.city && this.state.fetchedUser.city.title\n                                    ? this.state.fetchedUser.city.title\n                                    : ''\n                            }\n                        >\n                            {`${this.state.fetchedUser.first_name} ${this.state.fetchedUser.last_name}`}\n                        </ListItem>\n                    </Group>}\n                    <Modal\n                        activeModal={this.state.activeModal}\n                        currentTitle={this.state.currentTitle}\n                        currentCaption={this.state.currentCaption}\n                        actionFlag={this.state.actionFlag}\n                        currentButtonText={this.state.currentButtonText}\n                        onCloseModal={this.closeModal}\n                        onAction={this.handleModalAction}\n                    />\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\nconsole.log('kek', connect.send(\"VKWebAppGetUserInfo\", {}))\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}